
version: '3.8'

services:
  traefik:
    image: traefik:v2.11
    command:
      - --api.dashboard=true
      - --api.insecure=true
      - --entrypoints.web.address=:80
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
    ports:
      - "80:80"         # accès normal
      - "8080:8080"     # dashboard Traefik (éviter conflit avec SonarQube en 9000) http://localhost:8080/dashboard/#/
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - tamarobot_net

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`tamarobot.localhost`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
    networks:
      - tamarobot_net

  backend:
    build: ./backend
    environment:
      - MONGODB_URI=${MONGODB_URI}
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    depends_on:
      - mongo
      - mysql
    volumes:
      - ./backend:/app
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`api.tamarobot.localhost`)"
      - "traefik.http.services.backend.loadbalancer.server.port=3000"
    networks:
      - tamarobot_net

  mongo:
    image: mongo
    ports:
      - "27017:27017"
    volumes:
     - mongo-data:/data/db
    networks:
    - tamarobot_net

  mysql:
    image: mysql:8
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    ports:
      - "3307:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
    - tamarobot_net

  sonarqube:
    image: sonarqube:community
    ports:
      - "9000:9000"
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    depends_on:
      - mysql
    networks:
    - tamarobot_net

volumes:
  mongo-data:
  mysql-data:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:

networks:
  tamarobot_net:
    driver: bridge